[tool.poetry]
name = "{{ cookiecutter.package_name }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
readme = "README.md"
packages = [{include = "{{ cookiecutter.package_name }}", from = "src"}]
include = [
    { path = "src/{{ cookiecutter.package_name }}/py.typed" },
    # Typing stubs
    { path = "*.pyi"},
]

[tool.poetry.dependencies]
python = "^3.9"
{%- if cookiecutter.command_line_interface|lower == "click" %}
click = "^8.1.7"
{% endif -%}

{% if cookiecutter.command_line_interface|lower == "click" %}
[tool.poetry.scripts]
{{ cookiecutter.package_name }} = "{{ cookiecutter.package_name }}.cli:main"
{%- endif %}

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-random = "^0.2"
pytest-repeat = "^0.9.1"
pytest-describe = "^2.1.0"
pytest-expecter = "^3.0"
pytest-mock = "^3.11.1"
pytest-watch = "^4.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.288"
black = "^23.9.1"
deptry = "^0.12.0"
mypy = "^1.5.1"
bump2version = "^1.0.1"
nbstripout = "^0.6.1"
ipython = "^8.15.0"
jupyter = { version = "^1.0.0", markers = "sys_platform != 'win32'" }

[tool.black]
line-length = 120
target-version = ["py37"]
preview = true

[tool.mypy]
cache_dir = ".cache/mypy/"
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
ignore_missing_imports = "True"

[tool.ruff]
cache-dir = ".cache/ruff/"
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    # Use of assert detected
    "S101",
]

[tool.deptry]
known_first_party = ["{{ cookiecutter.package_name }}"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"